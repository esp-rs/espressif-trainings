---
name: CI

on:
  push: {}
  pull_request:
    branches: [main]
    paths-ignore:
      - "book/"
      - "book/**"
  schedule:
    - cron: "50 7 * * *"

jobs:
  build-examples:
    name: Build ${{ matrix.project.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project:
          - name: "button-interrupt"
            path: "advanced/button-interrupt"
          - name: "i2c-driver"
            path: "advanced/i2c-driver"
          - name: "i2c-sensor-reading"
            path: "advanced/i2c-sensor-reading"
          - name: "hardware-check"
            path: "intro/hardware-check"
          - name: "http-client"
            path: "intro/http-client"
          - name: "http-server"
            path: "intro/http-server"
          - name: "mqtt"
            path: "intro/mqtt/exercise"
          - name: "mqtt - host client"
            path: "intro/mqtt/host-client"
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Verify Changed files
        uses: tj-actions/changed-files@v35
        id: dockerfile-changed
        with:
          files: |
            **/Dockerfile

      - name: Build Docker image
        if: steps.dockerfile-changed.outputs.any_changed == 'true'
        run: docker image build --tag espressif/rust-std-training --file .devcontainer/Dockerfile .

      - name: Pull Docker image
        if: steps.dockerfile-changed.outputs.any_changed != 'true'
        run: docker image pull espressif/rust-std-training

      - name: Test code example in Docker image
        run: |
          docker run --mount type=bind,source="$(pwd)",target=/workspace,consistency=cached \
                 --rm espressif/rust-std-training:latest /bin/bash /workspace/.devcontainer/test.sh ${{ matrix.project.path }}
